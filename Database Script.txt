create table Listeners (
    listenerID int primary key ,
    firstName  varchar2(25),
    lastName   varchar2(25),
    email      varchar2(25) unique not null,
    pass    varchar2(30) unique not null,
    username    varchar2(25) unique not null,
    dateOfBirth  date 
);

create table Playlists (
    playlistID  int primary key ,
    name varchar2(40) ,
    numOfSongs int
);

create table Artists (
    artistID int primary key,
    firstName  varchar2(25),
    lastName   varchar2(25),
    email      varchar2(25) unique not null,
    pass    varchar(30) unique not null,
    bio         varchar2(150)

);

create table Albums (
    albumID int primary key ,
    genre varchar2(25),
    name varchar2(40),
    dateAdded date,
    numOfSongs int,
    artistID int ,
    foreign key (artistID) references Artists (artistID) on delete cascade
);

create table Songs(
    songID int primary key,
    name varchar2 (25),
    isSingle bit(1),
    lengthOfSong  number(3,2),
    artistID int ,
    albumID int ,
   foreign key (artistID) references Artists (artistID) on delete cascade,
  foreign key (albumID)  references Albums (albumID) on delete cascade,
);

create table events (
    eventID int primary key ,
    name varchar2(30),
    location varchar2(30),
    price int check (price>0),
    description varchar2(200),
    dateOfEvent date,
    artistID int, 
    foreign key (artistID) references Artists (artistID) on delete cascade
);

create table ListenersFollowers(
    followed int ,
    follower int ,
    foreign key (followed) references Listeners (listenerID) on delete cascade,
    foreign key (follower) references Listeners (listenerID) on delete cascade,
    primary key(followed,follower)
);

create table PlaylistDetails (
   listenerID int,
   playlistID int,
   songID int,
   foreign key (listenerID) references Listeners (listenerID) on delete cascade,
   foreign key (playlistID) references Playlists (playlistID) on delete cascade,
   foreign key (songID) references Song (songID) on delete cascade ,
);

create ArtistsFollowers (
   artistID int,
   listenerID int,
   foreign key (listenerID) references Listeners (listenerID) on delete cascade,
   foreign key (artistID) references Artists (artistID) on delete cascade,
   primary key (artistID,listenerID)
);

alter PlaylistDetails add primary key(listenerID,playlistID,songID);





